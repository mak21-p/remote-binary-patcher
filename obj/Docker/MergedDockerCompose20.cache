name: dockercompose11126473702226773480
services:
  caddy:
    container_name: caddy
    image: caddy:latest
    networks:
      patcher-network: null
    ports:
    - mode: ingress
      target: 8080
      published: "8080"
      protocol: tcp
    - mode: ingress
      target: 443
      published: "443"
      protocol: tcp
    restart: unless-stopped
    volumes:
    - type: volume
      source: caddy_data
      target: /data
      volume: {}
    - type: bind
      source: C:\Users\maqso\Desktop\misc\patcher\patcherserver\PatcherServer\PatcherServer\Caddyfile
      target: /etc/caddy/Caddyfile
      bind:
        create_host_path: true
    - type: bind
      source: /PatcherServer/Caddy/LaunchFiles
      target: /data/LaunchFiles
      bind:
        create_host_path: true
  patcherserver:
    build:
      context: C:\Users\maqso\Desktop\misc\patcher\patcherserver\PatcherServer
      dockerfile: PatcherServer/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: patcherserver
    networks:
      patcher-network: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: volume
      source: caddy_data
      target: /app/caddy_data
      volume: {}
    - type: bind
      source: C:\Users\maqso\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\maqso\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
networks:
  patcher-network:
    name: dockercompose11126473702226773480_patcher-network
volumes:
  caddy_data:
    name: dockercompose11126473702226773480_caddy_data
    driver: local